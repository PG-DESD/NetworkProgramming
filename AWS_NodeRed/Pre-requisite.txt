What's the Difference Between Roles and Policies in AWS?
The difference between IAM roles and policies in AWS is that
a role is a type of IAM identity that can be authenticated and 
authorized to utilize an AWS resource, 
whereas a policy defines the permissions of the IAM identity.

Example for Policy:
The policy stipulates that access to a particular resource is 
allowed on all dates except between April 1, 2022 and June 30, 2022. 
In order to use this policy, the "action" statement needs to 
be specified by an admin, then you assign that action to an 
identity (user, group, or role).

Example for Role:
Administrators create roles that are tied to specific policies that 
are appropriate for the new project. Employees—both current and 
new employees—can then be easily assigned to their new roles so 
that they only have access to what their new positions require. 

1. Create IOT All Access Policy in AWS
AWS_Console->IAM->AccessManagement->Policies->Create Policy
Select Service IoT
Actions : All IoT actions (iot:*)
Resources: All resources

2. Create IoT Core Access Policies
AWS_Console->Iot_Core->Security->Policies->Create Policy
Policy name: <name>
Policy effect:Allow
Policy action:*
Policy resource:*

3. Create IoT Core Access Certificate
AWS_Console->Iot_Core->Security->Certificate->Add Certificate->Create Certificate
Auto-generate new certificate (recommended)
Certificate status: Active
Download the Certificate: NOTE ***This is the only time you can download the key files for this certificate.
Only 3 Certificates are Required 
a. Device certificate
b. Private key file
c. Root CA certificates->Amazon trust services endpoint

4. Note Your Endpoint Address
AWS IoT->Settings->Device data endpoint
Example : abcd12dfsur-ats.iot.us-east-1.amazonaws.com

5. Update the above info in Node Red
a. server: abcd12dfsur-ats.iot.us-east-1.amazonaws.com
b. Device certificate
c. Private key file
d. AmazonRootCA1 certificates

6. Test the Data in MQTT Test Client
Subscribe to topic: demo

7. Forward this data to Dynamodb
Message Routing -> Rules-> Create rule->Rule Name:<name>->Action 1-> Link DynamoDBv2 

SQL statement
SELECT * FROM 'demo'

Partition Key of the table must be as Below Format

PartitionKey: timestamp as a String the device  JSON is:  "timestamp":  "12345" 

PartitionKey: timestamp as a Number the device JSON is "timestamp": 12345

No quotes for numbers as per JSON formatting standards

Note:if you enter a string type but mistakenly designate a number 
for the incoming data then the data wont be recognized in DynamoDB.
